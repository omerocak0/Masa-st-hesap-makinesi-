<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>